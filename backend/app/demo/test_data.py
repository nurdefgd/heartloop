from datetime import date, timedelta
import random

# –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
DEMO_USERS = [
    {
        "username": "alex_demo",
        "full_name": "Alex Johnson",
        "email": "alex@demo.com",
        "birth_date": date(1995, 5, 15),
        "gender": "male",
        "bio": "–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é üì∏ –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ —Å—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏!",
        "profile_photo": "/demo/photos/alex.jpg",
        "location": "–ú–æ—Å–∫–≤–∞",
        "interests": ["photography", "travel", "music"]
    },
    {
        "username": "maria_demo",
        "full_name": "Maria Smith",
        "email": "maria@demo.com",
        "birth_date": date(1997, 8, 23),
        "gender": "female",
        "bio": "–û–±–æ–∂–∞—é –π–æ–≥—É –∏ –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ üßò‚Äç‚ôÄÔ∏è –ò—â—É –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞!",
        "profile_photo": "/demo/photos/maria.jpg",
        "location": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        "interests": ["yoga", "fitness", "cooking"]
    },
    {
        "username": "david_demo",
        "full_name": "David Brown",
        "email": "david@demo.com",
        "birth_date": date(1993, 12, 7),
        "gender": "male",
        "bio": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –≥–µ–π–º–µ—Ä, –ª—é–±–∏—Ç–µ–ª—å –∫–æ—Ñ–µ ‚òïÔ∏è –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!",
        "profile_photo": "/demo/photos/david.jpg",
        "location": "–ú–æ—Å–∫–≤–∞",
        "interests": ["gaming", "technology", "coffee"]
    }
]

# –¢–µ—Å—Ç–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã
DEMO_INTERESTS = [
    "travel", "photography", "music", "yoga", "fitness", "cooking",
    "gaming", "technology", "coffee", "art", "books", "movies",
    "sports", "dancing", "hiking", "food", "pets", "fashion"
]

# –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞
DEMO_MESSAGES = [
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üëã",
    "–û—Ç–ª–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏! –ì–¥–µ –æ–Ω–∏ –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã?",
    "–ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –Ω–∞ —á–∞—à–µ—á–∫—É –∫–æ—Ñ–µ? ‚òïÔ∏è",
    "–ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ?",
    "–Ø —Ç–æ–∂–µ –æ–±–æ–∂–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å! –ö–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã —É–∂–µ –ø–æ—Å–µ—Ç–∏–ª(–∞)?",
    "–õ—é–±–∏–º—ã–π —Ñ–∏–ª—å–º?",
    "–î–∞–≤–∞–π —Å–æ–∑–≤–æ–Ω–∏–º—Å—è?",
    "–ö–∞–∫—É—é –º—É–∑—ã–∫—É —Å–ª—É—à–∞–µ—à—å?"
]

def generate_demo_match():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç—á –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    return {
        "match_percentage": random.randint(75, 99),
        "created_at": date.today() - timedelta(days=random.randint(1, 30)),
        "last_message": random.choice(DEMO_MESSAGES)
    }

def generate_demo_chat_history():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–µ–º–æ-—á–∞—Ç–∞"""
    messages = []
    for _ in range(random.randint(5, 10)):
        messages.append({
            "text": random.choice(DEMO_MESSAGES),
            "timestamp": date.today() - timedelta(days=random.randint(1, 7)),
            "is_read": random.choice([True, False])
        })
    return messages 